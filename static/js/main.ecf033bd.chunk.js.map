{"version":3,"sources":["cmps/Card.jsx","cmps/ExpensesFilter.jsx","cmps/ExpenseDate.jsx","cmps/ExpenseItem.jsx","cmps/ExpenseItemsList.jsx","cmps/ChartBar.jsx","cmps/Chart.jsx","cmps/ExpensesChart.jsx","cmps/Expenses.jsx","cmps/ExpenseForm.jsx","cmps/NewExpense.jsx","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","htmlFor","name","value","selected","onChange","event","onChangeFilter","target","id","ExpenseDate","date","month","toLocaleString","day","year","getFullYear","ExpenseItem","amount","title","onClick","console","log","delete","ExpenseItemsList","items","onDelete","length","map","expense","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","datPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","onDeleteExpense","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseDate","Date","onSaveExpenseData","type","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","expenseData","random","onAddExpense","INITIAL_EXPENSES","App","setExpenses","newExpenses","prevExpenses","expenseId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecf033bd.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../assets/style/cmps/Card.css'\r\n\r\nexport function Card (props) {\r\n  const classes = 'card ' + props.className\r\n  return <div className={classes}>{props.children}</div>\r\n}\r\n","import '../assets/style/cmps/ExpensesFilter.css'\r\n\r\nexport const ExpensesFilter = (props) => {\r\n  const filterChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label htmlFor='selected-year'>Filter by Year</label>\r\n        <select name='selected-year' value={props.selected} onChange={filterChangeHandler} id='selectFilter'>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import '../assets/style/cmps/ExpenseDate.css'\r\n\r\nexport function ExpenseDate (props) {\r\n  const { date } = props\r\n  const month = date.toLocaleString('en-US', { month: 'long' })\r\n  const day = date.toLocaleString('en-US', { day: '2-digit' })\r\n  const year = date.getFullYear()\r\n\r\n  return (\r\n    <div className='expanse-date'>\r\n      <div className='expanse-date_month'>{month}</div>\r\n      <div className='expanse-date_year'>{year}</div>\r\n      <div className='expanse-date_day'>{day}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ExpenseDate } from './ExpenseDate'\r\nimport { Card } from './Card'\r\nimport '../assets/style/cmps/ExpenseItem.css'\r\n\r\nexport const ExpenseItem = (props) => {\r\n  const { date, amount, title } = props\r\n\r\n  const deleteHandler = () => {\r\n    console.log(props.id)\r\n    props.delete(props.id)\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <Card className='expense-item'>\r\n        <p className='delete-expense' onClick={deleteHandler}>X</p>\r\n        <ExpenseDate date={date}  />\r\n        <div className='description'>\r\n          <h2>{title}</h2>\r\n          <div className='price'>${amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ExpenseItem } from './ExpenseItem'\r\nimport '../assets/style/cmps/ExpenseItemsList.css'\r\n\r\nexport const ExpenseItemsList = ({ items, onDelete }) => {\r\n  if (items.length === 0) {\r\n    return <h2 className='expenses-list_falback'>found no expenses</h2>\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {items.map((expense) => {\r\n        return (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            id={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n            delete={onDelete} // props.onDelete\r\n          />\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport '../assets/style/cmps/ChartBar.css'\r\n\r\nexport const ChartBar = (props) => {\r\n  let barFillHeight = '0%'\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\r\n  }\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div className='chart-bar__fill' style={{ height: barFillHeight }} />\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ChartBar } from './ChartBar'\r\nimport '../assets/style/cmps/Chart.css'\r\n\r\nexport const Chart = (props) => {\r\n  const datPointsValues = props.dataPoints.map(dataPoint => dataPoint.value)\r\n  const totalMaximum = Math.max(...datPointsValues)\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => {\r\n        return (\r\n          <ChartBar\r\n            key={dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMaximum}\r\n            label={dataPoint.label}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Chart } from './Chart'\r\n\r\nexport const ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 }\r\n  ]\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth() // starting at 0 => Jan = 0\r\n    chartDataPoints[expenseMonth].value += expense.amount\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Card } from './Card'\r\nimport { ExpensesFilter } from './ExpensesFilter'\r\nimport { ExpenseItemsList } from './ExpenseItemsList'\r\nimport '../assets/style/cmps/Expenses.css'\r\nimport { ExpensesChart } from './ExpensesChart'\r\n\r\nexport const Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020')\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear)\r\n  }\r\n\r\n  const filteredExpenses = props.expenses.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpenseItemsList items={filteredExpenses} onDelete={props.onDeleteExpense} />\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport '../assets/style/cmps/ExpenseForm.css'\r\n\r\nexport const ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('')\r\n  const [enteredAmount, setEnteredAmount] = useState('')\r\n  const [enteredDate, setEnteredDate] = useState('')\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: ''\r\n  // })\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value)\r\n    // setUserInput({\r\n    //   ...userInput, enteredTitle: event.target.value\r\n    // })\r\n    // setUserInput(prevState => {\r\n    //   return { ...prevState, enteredTitle: event.target.value }\r\n    // })\r\n  }\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value)\r\n    // setUserInput({\r\n    //   ...userInput, enteredAmount: event.target.value\r\n    // })\r\n  }\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value)\r\n    // setUserInput({\r\n    //   ...userInput, enteredDate: event.target.value\r\n    // })\r\n  }\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault()\r\n\r\n    const expenseDate = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate)\r\n    }\r\n\r\n    props.onSaveExpenseData(expenseDate)\r\n    setEnteredTitle('')\r\n    setEnteredAmount('')\r\n    setEnteredDate('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input type='number' value={enteredAmount} min='0.01' step='0.01' onChange={amountChangeHandler} />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input type='date' value={enteredDate} min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler} />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type='button' onClick={props.onCancel}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport '../assets/style/cmps/NewExpense.css'\r\nimport { ExpenseForm } from './ExpenseForm'\r\n\r\nexport const NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    }\r\n    console.log(expenseData);\r\n    props.onAddExpense(expenseData)\r\n    setIsEditing(false)\r\n  }\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true)\r\n  }\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false)\r\n  }\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expanse</button>}\r\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable react/react-in-jsx-scope */\nimport { Expenses } from './cmps/Expenses'\nimport { NewExpense } from './cmps/NewExpense'\nimport React, { useState } from 'react'\n\nconst INITIAL_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }\n]\n\nfunction App () {\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES)\n\n  const addExpenseHandler = (newExpenses) => {\n    setExpenses(prevExpenses => {\n      // return [...prevExpenses].unshift(newExpenses)\n      return [newExpenses, ...prevExpenses]\n    })\n  }\n\n  const deleteExpenseHandler = (expenseId) => {\n    setExpenses(prevExpenses => {\n      const updatedExpenses = prevExpenses.filter(expense => expense.id !== expenseId)\n      return updatedExpenses\n    })\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses onDeleteExpense={deleteExpenseHandler} expenses={expenses} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}